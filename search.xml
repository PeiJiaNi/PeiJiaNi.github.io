<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[分析与统计算法的执行效率和资源消耗]]></title>
    <url>%2F2019%2F03%2F13%2F%E5%88%86%E6%9E%90%E4%B8%8E%E7%BB%9F%E8%AE%A1%E7%AE%97%E6%B3%95%E7%9A%84%E6%89%A7%E8%A1%8C%E6%95%88%E7%8E%87%E5%92%8C%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%2F</url>
    <content type="text"><![CDATA[分析与统计算法的执行效率和资源消耗 我们都知道，学数据结构的其中一个目的就是为了我们的程序能跑的更”快“，占用的内存空间更“少”，那么我们应该如何来衡量这两项呢，这就需要用到接下来介绍的方法啦。 闲话少说，现在让我们通过一个小案例开始吧！ Boss:小V，你帮我测试一下这两段完成相同功能代码，看看哪一段代码执行效率更高吧！]]></content>
  </entry>
  <entry>
    <title><![CDATA[算法定义、特性及要求]]></title>
    <url>%2F2019%2F03%2F12%2F%E7%AE%97%E6%B3%95%E5%AE%9A%E4%B9%89%E3%80%81%E7%89%B9%E6%80%A7%E5%8F%8A%E8%A6%81%E6%B1%82%2F</url>
    <content type="text"><![CDATA[算法定义、特性及要求1、算法定义算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。 2、算法特性1、输入输出 算法有零个或多个输入，至少有一个或多个输出。 2、有穷性 算法在执行有限的步骤之后，自动结束而不会出现无限循环，并且每一个步骤在可接受的时间内完成。 3、确定性 算法的每一步骤都具有确定的含义，不会出现二义性。（同入同出）。 4、可行性 算法的每一步必须是可行的，也就是说，每一步都能够通过执行有限次数完成。 3、算法设计的要求1、正确性 算法的正确性是指算法至少应具有输入、输出及加工处理无歧义性、能正确反映问题需求、能得到问题的正确答案（即输入输出、确定性以及能解决问题） 没有语法错误 对于合法的输入数据能够产生满足要求的输出结果 对于非法的输入数据能够得出满足规格说明的结果(衡量标准) 对于精心挑选的，甚至刁难的测试数据都有满足要求的输出结果 2、可读性 方便阅读、理解与交流 3、健壮性 当输入数据不合法时，算法能做出相关处理，而不是产生异常或莫名其妙的结果 4、时间效率高和存储量低（空间效率高）]]></content>
      <tags>
        <tag>-数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构基本概念]]></title>
    <url>%2F2019%2F03%2F11%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[1、数据结构基本概念和术语1.1、数据数据是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符合集合。数据，其实就是符号，而这些符号必须具备两个前提： 1. 可以输入到计算机中。 2. 能被计算机程序处理。 数据包括： 数值类型：整型、实型等； 非数值类型：字符及声音、图像、视频等； 1.2、数据元素数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。 比如： 人类(数据)中，数据元素为人(组成该类) 畜类(数据)中，牛、马、羊等都是该类的数据元素(组成该类) 1.3、数据项数据项：一个数据元素可以由若干个数据项组成。数据项是数据不可分割的最小单位，但真正讨论问题时，数据元素才是数据结构中建立数据模型的着眼点。 比如： 人(数据元素)可以有眼、耳、鼻、嘴、脚（数据项），也可以有姓名、性别（数据项）（具体要哪些数据项，要视系统决定）。 1.4、数据对象 数据对象：是性质相同（指数据元素具有相同数量和类型的数据项）的数据元素的集合，是数据的子集。 数据对象为数据的子集，在实际应用中，处理的数据元素通常具有相同性质（即处理的是数据对象），所以，在不产生混淆的情况下，我们都讲数据对象简称为数据。 1.5、数据结构总结： 2、逻辑结构和物理结构2.1、逻辑结构​ 逻辑结构是指数据对象中数据元素之间的相互关系。 2.1.1、分类 集合结构：集合结构中的数据元素除了同属于一个集合外，之间没有其他关系 线性结构：线性结构中的数据元素之间是一对一的关系 树形结构：树形结构中的数据元素存在一种一对多的层次关系 图型结构：图型结构的数据元素之间存在一种多对多的关系 注意： ​ 使用示意图表示数据的逻辑结构时，将每一个数据元素看做一个结点，用圆圈表示 ​ 元素之间的逻辑关系用结点之间的连线表示，如果关系是有方向的，则用带箭头的连线表示 2.2、物理结构（存储结构) 物理结构是指数据的逻辑结构在计算机中的存储方式（如何将逻辑结构转换为物理结构，即把数据元素存储到存储器中，存储结构应反映数据元素之间的逻辑关系） 分类： 顺序存储结构：数据元素存放于地址连续的存储单元里，数据间的逻辑关系和物理关系是一致的 链式存储结构：数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。 总结： 3、抽象数据类型3.1、数据类型​ 数据类型是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。 3.1.1、数据类型分类 原子类型：不可再分解的类型，包括实型，整型，字符型等 结构类型：由若干个类型组合而成，可分解。例如整型数组是由若干整型数据组成的。 3.2、抽象数据类型（Abstract Data Type,ADT）抽象数据类型是指一个数学模型及定义在该模型上的一组操作。一个抽象数据类型定义了：一个数据对象、数据对象中各数据元素之间的关系以及对数据元素的操作 (抽象：抽象是抽取出事物具有的普遍的本质。隐藏了繁杂的细节，只保留了实现目标所必须的信息。)]]></content>
      <tags>
        <tag>-数据结构与算法</tag>
      </tags>
  </entry>
</search>
